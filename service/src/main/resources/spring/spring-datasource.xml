<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>

    <!-- 配置数据源 -->
    <bean name="dataSourceMaster" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${db.blogsit.url}" />
        <property name="username" value="${db.blogsit.user}" />
        <property name="password" value="${db.blogsit.pwd}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="${db.blogsit.maxActive}" />
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${db.blogsit.maxIdle}" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${db.blogsit.maxWait}" />
    </bean>

    <!-- 事务控制，设置程序中使用@Transactional默认对主库（dataSourceMaster）的可以进行事务化管理 -->
    <!-- 如果需要对从库（dataSourceSlave）进行事务化管理，需要在方法上的注解中指定事务管理器 例如@Transactional(value="txManager") -->
    <bean id="defaultTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceMaster"/>
    </bean>
    <tx:annotation-driven transaction-manager="defaultTxManager" proxy-target-class="true"/>

    <!-- MyBatis配置 -->
    <bean id="masterSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceMaster"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- mapper和resultmap配置路径 -->
        <property name="mapperLocations">
            <list>
                <value>classpath*:mapper/**/*.xml</value>
            </list>
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="annotationClass" value="org.springframework.stereotype.Repository" />
        <property name="basePackage" value="com.blog.blogsit" />
        <property name="sqlSessionFactoryBeanName" value="masterSqlSessionFactory"/>
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="masterSqlSessionFactory" />
    </bean>
</beans>
